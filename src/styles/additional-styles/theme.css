.form-input:focus,
.form-textarea:focus,
.form-multiselect:focus,
.form-select:focus,
.form-checkbox:focus,
.form-radio:focus {
  @apply ring-0;
}

/* Hamburger button */
.hamburger svg > *:nth-child(1),
.hamburger svg > *:nth-child(2),
.hamburger svg > *:nth-child(3) {
  transform-origin: center;
  transform: rotate(0deg);
}

.hamburger svg > *:nth-child(1) {
  transition:
    y 0.1s 0.25s ease-in,
    transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19),
    opacity 0.1s ease-in;
}

.hamburger svg > *:nth-child(2) {
  transition: transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}

.hamburger svg > *:nth-child(3) {
  transition:
    y 0.1s 0.25s ease-in,
    transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19),
    width 0.1s 0.25s ease-in;
}

.hamburger.active svg > *:nth-child(1) {
  opacity: 0;
  y: 11;
  transform: rotate(225deg);
  transition:
    y 0.1s ease-out,
    transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1),
    opacity 0.1s 0.12s ease-out;
}

.hamburger.active svg > *:nth-child(2) {
  transform: rotate(225deg);
  transition: transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
}

.hamburger.active svg > *:nth-child(3) {
  y: 11;
  transform: rotate(135deg);
  transition:
    y 0.1s ease-out,
    transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1),
    width 0.1s ease-out;
}

@property --glow-deg {
  syntax: '<angle>';
  inherits: true;
  initial-value: -90deg;
}

/* the colors don't need to be registed */
@property --clr-1 {
  syntax: '<color>';
  inherits: true;
  initial-value: red;
}

@property --clr-2 {
  syntax: '<color>';
  inherits: true;
  initial-value: yellow;
}

@property --clr-3 {
  syntax: '<color>';
  inherits: true;
  initial-value: green;
}

@property --clr-4 {
  syntax: '<color>';
  inherits: true;
  initial-value: blue;
}

@property --clr-5 {
  syntax: '<color>';
  inherits: true;
  initial-value: purple;
}

/* Glowing border */
.glowing-border {
  --gradient-glow:
    var(--clr-1), var(--clr-2), var(--clr-3), var(--clr-4), var(--clr-5), var(--clr-1);

  margin-block: 3rem;
  padding: 8rem 3rem;
  max-width: 60ch;

  border: var(--border-width, 3px) solid transparent;
  border-left: 0;
  border-radius: 0 100vw 100vw 0;
  background:
    linear-gradient(var(--surface, canvas) 0 0) padding-box,
    conic-gradient(from var(--glow-deg), var(--gradient-glow)) border-box;

  position: relative;
  isolation: isolate;

  animation: glow 10s infinite linear;
}

@keyframes glow {
  100% {
    --glow-deg: 270deg;
  }
}

.glowing-border::before,
.glowing-border::after {
  content: '';
  position: absolute;
  border-radius: inherit;
}

.glowing-border::before {
  z-index: -1;
  background: var(--surface, canvas);
  inset: 0.5rem;
  scale: 1.2 1;
  transform-origin: right;
  filter: blur(var(--glow-size, 1rem));
}

.glowing-border::after {
  z-index: -2;
  inset: -1.5rem;
  background: conic-gradient(from var(--glow-deg), var(--gradient-glow));
  filter: blur(var(--glow-size, 1rem));
  opacity: var(--glow-intensity, 0.125);
}

.glowing-border.right {
  margin-inline-start: auto;
  border-radius: 100vw 0 0 100vw;
  border: var(--border-width, 3px) solid transparent;
  border-right: 0;

  &::before {
    transform-origin: left;
  }
}
